extends /shared/layout
block append headscripts
    script(src="https://code.createjs.com/1.0.0/createjs.min.js")
    script(src="Volume Control_HTML5 Canvas.js?1610142601065")
    script.
        var canvas, stage, exportRoot, anim_container, dom_overlay_container, fnStartAnimation;
        function init() {
            canvas = document.getElementById("canvas");
            anim_container = document.getElementById("animation_container");
            dom_overlay_container = document.getElementById("dom_overlay_container");
            var comp=AdobeAn.getComposition("B4F5C4ED07F24EE0B3DFED6205485A31");
            var lib=comp.getLibrary();
            var loader = new createjs.LoadQueue(false);
            loader.addEventListener("fileload", function(evt){handleFileLoad(evt,comp)});
            loader.addEventListener("complete", function(evt){handleComplete(evt,comp)});
            var lib=comp.getLibrary();
            loader.loadManifest(lib.properties.manifest);
        }
        function handleFileLoad(evt, comp) {
            var images=comp.getImages();	
            if (evt && (evt.item.type == "image")) { images[evt.item.id] = evt.result; }	
        }
        function handleComplete(evt,comp) {
            //This function is always called, irrespective of the content. You can use the variable "stage" after it is created in token create_stage.
            var lib=comp.getLibrary();
            var ss=comp.getSpriteSheet();
            var queue = evt.target;
            var ssMetadata = lib.ssMetadata;
            for(i=0; i<ssMetadata.length; i++) {
                ss[ssMetadata[i].name] = new createjs.SpriteSheet( {"images": [queue.getResult(ssMetadata[i].name)], "frames": ssMetadata[i].frames} )
            }
            exportRoot = new lib.VolumeControl_HTML5Canvas();
            stage = new lib.Stage(canvas);
            stage.enableMouseOver();	
            //Registers the "tick" event listener.
            fnStartAnimation = function() {
                stage.addChild(exportRoot);
                createjs.Ticker.framerate = lib.properties.fps;
                createjs.Ticker.addEventListener("tick", stage);
            }	    
            //Code to support hidpi screens and responsive scaling.
            AdobeAn.makeResponsive(false,'both',false,1,[canvas,anim_container,dom_overlay_container]);	
            AdobeAn.compositionLoaded(lib.properties.id);
            fnStartAnimation();
        }
  

block content
    +pageTitle
   
    +pod('')
        .uk-width-1-1
            #animation_container(style="background-color:rgba(255, 255, 255, 1.00); width:920px; height:518px")
            canvas#canvas(width="920", height="518", style="position: absolute; display: block; background-color:rgba(255, 255, 255, 1.00);")
            #dom_overlay_container(style="pointer-events:none; overflow:hidden; width:920px; height:518px; position: absolute; left: 0px; top: 0px; display: block;").
        
        
    script.
        init();